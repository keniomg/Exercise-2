using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp18
{
    internal class Program
    {
        static void Main(string[] args)
        {
            bool isContinue = true;
            char healingTouchKey = 'q';
            char fireBallKey = 'w';
            char frostBallKey = 'e';
            char forkHitKey = 'd';
            char fingerOfDeathKey = 'r';
            int minBossDamageValue = 130;
            int maxBossDamageValue = 200;
            int forkHitSpellDamage = 150;
            int healingTouchSpellHPRegen = 250;
            int fireBallSpellDamage = 250;
            int frostBallSpellDamage = 125;
            int fingerOfDeathSpellDamage = 650;
            int bossHp = 1250;
            int currentPlayerHp = 800;
            int maxPlayerHp = 800;
            int tempPlayerHp = 0;
            Random random = new Random();

            while (bossHp > 0 && currentPlayerHp > 0)
            {
                bool isHealingSpell = false;
                bool isBossFrosted = false;
                bool isMissClick = false;
                int healedHp = 250;
                int playerDamage = 0;
                int bossDamage = random.Next(minBossDamageValue, maxBossDamageValue);
                Console.SetCursorPosition(4, 1);
                Console.WriteLine($"Ваше текущее здоровье: {currentPlayerHp}\t\tТекущее здоровье противника: {bossHp}");
                Console.SetCursorPosition(4, 15);
                Console.WriteLine($"Вы можете использовать следующие способности по нажатию соответствующих кнопок:\n" +
                    $"\n\n{healingTouchKey} - целебное касание (восстановить себе {healingTouchSpellHPRegen} ед. здоровья)" +
                    $"\n\n{fireBallKey} - огненный шар (нанести врагу {fireBallSpellDamage} ед. урона)" +
                    $"\n\n{frostBallKey} - ледяной шар (нанести врагу {frostBallSpellDamage} ед. уроона и оглушить на 1 ход)" +
                    $"\n\n{forkHitKey} - удар вилкой (нанести врагу {forkHitSpellDamage} ед. урона)" +
                    $"\n\n{fingerOfDeathKey} - палец смерти (нанести врагу {fingerOfDeathSpellDamage} ед. урона)\n");
                Console.SetCursorPosition(85, 15);
                ConsoleKeyInfo charKey = Console.ReadKey();
                Console.ForegroundColor = ConsoleColor.Green;
                Console.SetCursorPosition(4, 4);

                switch (charKey.Key)
                {
                    case ConsoleKey.Q:
                        tempPlayerHp = currentPlayerHp + healingTouchSpellHPRegen;
                        isHealingSpell = true;
                        break;

                    case ConsoleKey.W:
                        playerDamage = fireBallSpellDamage;
                        break;

                    case ConsoleKey.E:
                        playerDamage = frostBallSpellDamage;
                        isBossFrosted = true;
                        break;

                    case ConsoleKey.R:
                        playerDamage = fingerOfDeathSpellDamage;
                        break;

                    case ConsoleKey.D:
                        playerDamage = forkHitSpellDamage;
                        break;

                    default:
                        isMissClick = true;
                        break;
                }

                if (isMissClick)
                {
                    Console.WriteLine("Похоже, вы не попали по нужной клавише и теперь пропускаете ход!");
                }
                else if (isHealingSpell)
                {
                    if (tempPlayerHp > maxPlayerHp)
                    {
                        healedHp = healedHp - (tempPlayerHp - maxPlayerHp);
                        currentPlayerHp = maxPlayerHp;
                    }
                    else
                    {
                        currentPlayerHp += healedHp;
                    }

                    Console.WriteLine($"Вы восстановили себе {healedHp} ед. здоровья, и теперь у вас {currentPlayerHp} ед. здоровья!");
                }
                else
                {
                    bossHp -= playerDamage;

                    if (bossHp < 0)
                    {
                        bossHp = 0;
                    }
                    
                    Console.WriteLine($"Вы нанесли противнику {playerDamage} ед. урона, и у него осталось {bossHp} ед. здоровья!");
                }

                Console.SetCursorPosition(4, 6);
                Console.ForegroundColor = ConsoleColor.Yellow;

                if (bossHp > 0)
                {
                    if (isBossFrosted)
                    {
                        Console.WriteLine("Противник заморожен и пропускает ход! Чтобы закончить свой ход, нажмите любую клавишу...\n");
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(85, 15);
                        Console.ReadKey();
                    }
                    else
                    {
                        Console.WriteLine("Чтобы закончить свой ход, нажмите любую клавишу...\n");
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(85, 15);
                        Console.ReadKey();
                        Console.SetCursorPosition(4, 4);
                        Console.Write(new string(' ', Console.BufferWidth));
                        currentPlayerHp -= bossDamage;
                        Console.SetCursorPosition(4, 4);
                        Console.ForegroundColor = ConsoleColor.Red;

                        if (currentPlayerHp <0)
                        {
                            currentPlayerHp = 0;
                        }
                        
                        Console.Write($"Противник нанёс вам {bossDamage} ед. урона," +
                            $" и теперь у вас {currentPlayerHp} ед. здоровья!");
                    }
                }
                else
                {
                    isContinue = false;
                }

                Console.SetCursorPosition(4, 6);
                Console.ForegroundColor = ConsoleColor.Yellow;

                if (bossHp > 0 && currentPlayerHp == 0)
                {
                    Console.WriteLine("Вы проиграли! Чтобы закончить игру, нажмите любую клавишу...\n");
                    isContinue = false;
                }
                else if (bossHp == 0 && currentPlayerHp > 0)
                {
                    Console.WriteLine("Вы победили! Чтобы закончить игру, нажмите любую клавишу...\n");
                    isContinue = false;
                }
                else if (bossHp == 0 && currentPlayerHp == 0)
                {
                    Console.WriteLine("Ничья! Чтобы закончить игру, нажмите любую клавишу...\n");
                    isContinue = false;
                }

                if (isContinue)
                {
                    Console.SetCursorPosition(4, 6);
                    Console.Write(new string(' ', Console.BufferWidth));
                    Console.SetCursorPosition(4, 6);
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    Console.WriteLine("Чтобы приступить к следующему ходу, нажмите любую клавишу...\n");
                }

                Console.ForegroundColor = ConsoleColor.White;
                Console.SetCursorPosition(85, 15);
                Console.ReadKey();
                Console.Clear();
            }
        }
    }
}
